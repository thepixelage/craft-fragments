{% extends '@fragments/_layouts/base.twig' %}

{% import '_includes/forms' as forms %}

{% set title = "Edit Fragment Type"|t('fragments') %}

{% set crumbs = [
    {
        label: "Settings"|t('fragments'),
        url: cpUrl('fragments/settings'),
    },
    {
        label: "Fragment Types"|t('fragments'),
        url: cpUrl('fragments/settings/fragmenttypes'),
    },
] %}

{% set fullPageForm = true %}

{% block content %}

    {{ actionInput('fragments/fragment-types/save') }}

    {{ redirectInput('fragments/settings/fragmenttypes') }}

    {% if fragmentType.id %}{{ hiddenInput('fragmentTypeId', fragmentType.id) }}{% endif %}

    {{ forms.textField({
        first: true,
        label: "Name"|t('app'),
        instructions: "What this fragment type will be called in the control panel."|t('app'),
        id: 'name',
        name: 'name',
        value: fragmentType.name,
        errors: fragmentType.getErrors('name'),
        autofocus: true,
        required: true,
    }) }}

    {{ forms.textField({
        label: "Handle"|t('app'),
        instructions: "How youâ€™ll refer to this fragment type in the templates."|t('app'),
        id: 'handle',
        name: 'handle',
        class: 'code',
        autocorrect: false,
        autocapitalize: false,
        value: fragmentType.handle,
        errors: fragmentType.getErrors('handle'),
        required: true
    }) }}

    {{ forms.fieldLayoutDesignerField({
        fieldLayout: fragmentType.getFieldLayout(),
    }) }}

{% endblock %}

{% if isNew %}
    {% js %}
        new Craft.HandleGenerator('#name', '#handle');
    {% endjs %}
{% endif %}
